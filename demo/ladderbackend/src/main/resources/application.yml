spring:
  datasource:
#    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://host.docker.internal:5432/demo}
#    username: ${SPRING_DATASOURCE_USERNAME:postgres}
#    password: ${SPRING_DATASOURCE_PASSWORD:postgres}

    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://host.docker.internal:5432/ladder}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}


    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:10}
      minimum-idle: ${HIKARI_MIN_IDLE:5}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:300000}
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT:20000}
      max-lifetime: ${HIKARI_MAX_LIFETIME:1200000}
      pool-name: LadderHikariPool
      auto-commit: true
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=600s
  security:
    filter:
      order: -100
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  mvc:
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost,http://localhost:80,http://localhost:4200,https://ladder-app-a4ra.onrender.com,https://ladder-frontend-vj79.onrender.com,http://localhost:8081,https://localhost:8081,https://dmvtennisladders.com}
      allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD}
      allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Access-Control-Max-Age}
      allow-credentials: ${CORS_ALLOW_CREDENTIALS:false}
      max-age: ${CORS_MAX_AGE:3600}

server:
  port: ${PORT:8080}
  ssl:
    enabled: ${SSL_ENABLED:false}
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 10000
    accept-count: 100
    connection-timeout: 20000
    max-keep-alive-requests: 100
    keep-alive-timeout: 20000
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript,application/x-javascript
    min-response-size: 2048
  #  forward-headers-strategy: framework
  #  use-forward-headers: true

logging:
  level:
    root: ${LOG_LEVEL:INFO}
    org.hibernate.SQL: ${HIBERNATE_SQL_LOG_LEVEL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${HIBERNATE_BINDER_LOG_LEVEL:TRACE}
    com.ladder: ${APP_LOG_LEVEL:DEBUG}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:logs/application.log}
    max-size: 10MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name:ladder-app}

services:
  backend:
    environment:
      - CORS_ALLOWED_ORIGINS: https://ladder-app-a4ra.onrender.com,https://ladder-frontend-vj79.onrender.com
---
spring:
  config:
    activate:
      on-profile: prod
server:
  ssl:
    enabled: ${SSL_ENABLED:false}
    client-auth: none 